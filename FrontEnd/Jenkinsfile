pipeline {
    agent any
    tools {
        nodejs 'nodejs_20_12_2' // Configura la versi贸n de Node.js instalada en Jenkins
    }
    stages {
        stage('Install Dependencies') {
            steps {
                checkout scm // Utiliza la configuraci贸n de SCM del proyecto
                dir('FrontEnd') { // Cambia al directorio FrontEnd
                    bat 'npm install || exit 1' // Usa 'bat' para Windows
                }
            }
        }

        stage('Build Project') {
            steps {
                dir('FrontEnd') { // Cambia al directorio FrontEnd
                    bat 'npm run build || exit 1' // Genera la versi贸n de producci贸n del frontend
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('FrontEnd') { // Cambia al directorio FrontEnd
                    script {
                        bat 'docker build -t haruHisomu/frontend:latest . || exit 1' // Construye la imagen Docker
                    }
                }
            }
        }

        stage('Push Image to Docker Hub') {
            steps {
                dir('FrontEnd') { // Cambia al directorio FrontEnd
                    script {
                        withCredentials([string(credentialsId: 'dockerPass', variable: 'dhpsw')]) {
                            bat 'docker login -u haruHisomu -p %dhpsw% || exit 1'
                        }
                        bat 'docker push haruHisomu/frontend:latest || exit 1'
                    }
                }
            }
        }
    }
}
